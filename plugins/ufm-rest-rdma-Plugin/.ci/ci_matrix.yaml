---
job: ufm-rest-rdma

registry_host: harbor.mellanox.com
registry_path: /swx-storage/ci-demo
registry_auth: swx-storage
step_allow_single_selector: true

kubernetes:
  cloud: swx-k8s-spray

volumes:
  - {mountPath: /var/run/docker.sock, hostPath: /var/run/docker.sock}
runs_on_dockers:
   - {file: '.ci/Dockerfile_static_tests_ub2004', arch: 'x86_64', name: 'swx_static', tag: 'latest'}
  #- {name: 'swx_static', url: 'harbor.mellanox.com/collectx/x86_64/swx_static_tests:latest', category: 'tool', arch: 'x86_64'}
runs_on_agents:
  - nodeLabel: 'UFM-POC'

steps:
  - name: pylint
    containerSelector: "{name: 'swx_static'}"
    shell: '#!/bin/bash -x'
    run: |
      ret_code=0
      mkdir -p $WORKSPACE/logs/
      export PYTHONPATH=./src/:$PYTHONPATH
      python3 --version > logs/app-versions.txt
      python3 -m pip list >> logs/app-versions.txt
      lst=$(git diff --name-status remotes/origin/${ghprbTargetBranch} | grep -v ^D | awk '{print $NF}' |grep ".py$")
      if [ -z "$lst" ]; then 
          echo "No *.py changed files" >> logs/pylint.txt
      else
          for f in ${lst}; do 
              echo "pylint ${f}" >> logs/pylint.txt
              echo " " >> logs/pylint.txt
              pylint "${f}" >> logs/pylint.txt 2>&1
              # we are interested in return codes 1(fatal), 2(error), 4(warning) ==> bitmask 0x7
              # see: http://pylint.pycqa.org/en/latest/user_guide/run.html#exit-codes
              pylint_code=$(($(echo $?) & 0x7))
              ret_code=$(($pylint_code | $ret_code))
              echo " " >> logs/pylint.txt
         done
      fi
      exit $ret_code
    archiveArtifacts: 'logs/'
    parallel: true


  - name: Running Bandit
    containerSelector: "{name: 'swx_static'}"
    shell: '#!/bin/bash -x'
    run: |
      mkdir $WORKSPACE/logs/
      lst=$(git diff --name-status remotes/origin/$ghprbTargetBranch | grep -v ^D | awk '{print $NF}' |grep ".py$")
      if [ "$lst" == "" ]; then
          echo "No *.py changed files" > $WORKSPACE/logs/bandit.html
      else
          /usr/local/bin/bandit -lll -f html -c $WORKSPACE/.ci/bandit.yaml ${lst} > $WORKSPACE/logs/bandit.html || true
      fi
    parallel: true
    archiveArtifacts: 'logs/*'

  - name: build Plugin
    shell: '#!/bin/bash -x'
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: |
      cd docker
      ./docker_build.sh
      cp /ufm-plugin-rest-rdma_* /auto/UFM/tmp/${JOB_NAME}/${BUILD_ID}/
    parallel: false
    

  - name: Install Plugin Server
    shell: '#!/bin/bash -x'
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: |
      cd docker/
      tagver=$(cat release_info)
      echo $tagver
      expect << EOF
      spawn ssh admin@ufm-appliance07
      # expect "Are you sure you want to continue connecting (yes/no)?"
      # send -- "yes\r"
      expect "Password:*"
      send -- "admin\r"
      expect "> "
      send -- "enable\r"
      expect "# "
      send -- "config terminal\r"
      expect "/(config/) # "
      send -- "image fetch scp://root:3tango@10.209.36.69/auto/UFM/tmp/${JOB_NAME}/${BUILD_ID}/ufm-plugin-rest-rdma_$tagver.tar.gz\r"
      expect "/(config/) # "
      # send -- "docker load ufm-plugin-rest-rdma_$tagver.tar.gz\r"
      # expect "/(config/) # "
      sleep 50
      EOF
    parallel: false
  
  - name: laod plugin
    shell: '#!/bin/bash -x'
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: |
      cd docker/
      tagver=$(cat release_info )
      echo $tagver
      expect << EOF
      spawn ssh admin@ufm-appliance07
      # expect "Are you sure you want to continue connecting (yes/no)?"
      # send -- "yes\r"
      expect "Password:*"
      send -- "admin\r"
      expect "> "
      send -- "enable\r"
      expect "# "
      send -- "config terminal\r"
      expect "/(config/) # "
      send -- "docker load ufm-plugin-rest-rdma_$tagver.tar.gz\r"
      expect "/(config/) # "
      send -- "show docker images\r"
      sleep 60
      EOF

  - name: add plugin
    shell: '#!/bin/bash -x'
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: |
      cd docker/
      tagver=$(cat release_info )
      echo $tagver
      expect << EOF
      spawn ssh admin@ufm-appliance07
      expect "Password:*"
      send -- "admin\r"
      expect "> "
      send -- "enable\r"
      expect "# "
      send -- "config terminal\r"
      expect "/(config/) # "
      send -- "ufm plugin rest-rdma add tag $tagver\r"
      expect "/(config/) # "
      send -- "ufm plugin rest-rdma enable\r"
      expect "/(config/) # "
      send -- "show ufm plugin\r"
      expect "/(config/) # "
      send "show ufm status\r"
      sleep 10
      EOF
    parallel: false


  - name: Install Plugin client
    shell: '#!/bin/bash -x'
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    step_allow_single_selector: true
    run: |
      pwd
      cd docker/
      ls
      tagver=$(cat release_info )
      echo $tagver
      docker load < /ufm-plugin-rest-rdma_$tagver.tar.gz > /dev/null
      docker run -d --network=host --privileged --name=ufm-plugin-rest-rdma --rm -v /tmp/ibdiagnet:/tmp/ibdiagnet mellanox/ufm-plugin-rest-rdma:$tagver client
      # cd /tmp/client_cert/
      # docker cp ufm-client.pfx ufm-plugin-rest-rdma:/tmp
      cd /
      ./ufm_rest_rdma_client.sh -u admin -p admin -t simple -a POST -w ufmRest/actions/add_guids_to_pkey -l'{\"pkey\": \"0x0002\",\"guids\": [\"f452140300188540\"],\"index0\": true,\"default_membership\": \"full\",\"ip_over_ib\": false}'
      gettoken=$(./ufm_rest_rdma_client.sh -u admin -p admin -t simple -a GET -w ufmRest/actions/get_all_pkeys?guids_data=true)
      if [ "$gettoken" != [] ] ; then echo "post request passed" ; else exit 1 ; fi
      ./ufm_rest_rdma_client.sh -u admin -p admin -t simple -a POST -w ufmRest/actions/remove_guids_from_pkey -l '{\"pkey\":\"0x0002\",\"guids\":[\"f452140300188540\"]}'
      gettoken=$(./ufm_rest_rdma_client.sh -u admin -p admin -t simple -a GET -w ufmRest/actions/get_all_pkeys?guids_data=true)
      if [ "$gettoken" != [] ] ; then exit 1 ; else echo "delete request passed" ; fi
      # ./ufm_rest_rdma_client.sh -u admin -p admin  -t simple -a GET -w 'ufmRest/actions/get_all_pkeys?guids_data=true\&pkey_api_only=False'
      ./ufm_rest_rdma_client.sh -u admin -p admin -t ibdiagnet -a POST -w ufmRest/reports/ibdiagnetPeriodic -l '{\"general\": {\"name\": \"Alex\", \"location\": \"local\", \"running_mode\": \"once\"}, \"command_flags\": {\"--pc\": \"\"}}'
      tmpibi=$(ll /tmp/ibdiagnet/) ; if [ "$tmpibi" == "total 0" ] ; then exit 1 ; else echo "ibdiagnet post request passed" ; fi
      rm -rf /tmp/ibdiagnet/*
      docker stop ufm-plugin-rest-rdma
      docker image rm $(docker images |grep mell|awk '{print $3}')
      
    parallel: false

  - name: remove plugin
    shell: '#!/bin/bash -x'
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: |
      cd docker/
      tagver=$(cat release_info )
      echo $tagver
      expect << EOF
      spawn ssh admin@ufm-appliance07
      expect "Password:*"
      send -- "admin\r"
      expect "> "
      send -- "enable\r"
      expect "# "
      send -- "config terminal\r"
      expect "/(config/) # "
      send -- "ufm plugin rest-rdma remove\r"
      expect "/(config/) # "
      send -- "docker remove image mellanox/ufm-plugin-rest-rdma $tagver\r"
      expect "/(config/) # "
      send -- "show ufm plugin\r"
      expect "/(config/) # "
      send "show ufm status\r"
      sleep 10
      EOF
    parallel: false



pipeline_start:
  run: |
    mkdir -p /auto/UFM/tmp/${JOB_NAME}/${BUILD_ID}



pipeline_stop:
  run: |
    sudo rm -rf /auto/UFM/tmp/${JOB_NAME}/${BUILD_ID}
  








# Fail job if one of the steps fails or continue
failFast: false
