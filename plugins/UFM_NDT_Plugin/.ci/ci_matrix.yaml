---
job: ufm-ndt

registry_host: harbor.mellanox.com
registry_path: /swx-storage/ci-demo
registry_auth: swx-storage
step_allow_single_selector: true

kubernetes:
  cloud: swx-k8s-spray

credentials:
  - {credentialsId: '2c8fd3fe-df05-4f6f-9d1f-f1896d611434', usernameVariable: 'REST_USER', passwordVariable: 'PASSWORD'}

volumes:
  - {mountPath: /var/run/docker.sock, hostPath: /var/run/docker.sock}
runs_on_dockers:
   #- {file: 'plugins/UFM_NDT_Plugin/.ci/Dockerfile_static_tests_ub2004', arch: 'x86_64', name: 'swx_static', tag: '20230717'}
   - {url: 'harbor.mellanox.com/swx-storage/ci-demo/x86_64/swx_static:20230717', name: 'swx_static', tag: '20230717', arch: 'x86_64'}
runs_on_agents:
  - nodeLabel: 'UFM-POC'

steps:
  - name: pylint
    containerSelector: "{name: 'swx_static'}"
    shell: '#!/bin/bash -x'
    run: |
      ret_code=0
      mkdir -p $WORKSPACE/logs/
      export PYTHONPATH=./src/:$PYTHONPATH
      python3 --version > logs/app-versions.txt
      python3 -m pip list >> logs/app-versions.txt
      lst=$(git diff --name-status remotes/origin/${ghprbTargetBranch} | grep -v ^D | awk '{print $NF}' |grep ".py$")
      if [ -z "$lst" ]; then
          echo "No *.py changed files" >> logs/pylint.txt
      else
          for f in ${lst}; do
              echo "pylint ${f}" >> logs/pylint.txt
              echo " " >> logs/pylint.txt
              pylint "${f}" >> logs/pylint.txt 2>&1
              # we are interested in return codes 1(fatal), 2(error), 4(warning) ==> bitmask 0x7
              # see: http://pylint.pycqa.org/en/latest/user_guide/run.html#exit-codes
              pylint_code=$(($(echo $?) & 0x7))
              ret_code=$(($pylint_code | $ret_code))
              echo " " >> logs/pylint.txt
         done
      fi
      exit $ret_code
    archiveArtifacts: 'logs/'
    parallel: true
    enable: false


  - name: build Plugin
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: |
      cd plugins/UFM_NDT_Plugin/build
      bash -x ./docker_build.sh
      cp ufm-plugin-ndt* /auto/UFM/tmp/${JOB_NAME}/${BUILD_ID}/
    parallel: false


  - name: remove plugin start
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: plugins/UFM_NDT_Plugin/.ci/do_remove_plugin.sh
    parallel: false


  - name: Install Plugin Server
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    credentialsId: '2c8fd3fe-df05-4f6f-9d1f-f1896d611434'
    run: |
      export PASSWORD=$PASSWORD
      plugins/UFM_NDT_Plugin/.ci/do_install_plugin_server.sh
    parallel: false


  - name: load plugin
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: |
      service opensmd start
      plugins/UFM_NDT_Plugin/.ci/do_load_plugin.sh
    parallel: false


  - name: add plugin
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: plugins/UFM_NDT_Plugin/.ci/do_add_plugin.sh
    parallel: false


  - name: start simulation
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: | 
      cd /auto/UFM/tmp/ufm_verification/tests/test_with_sim/performance
      IP_SERVER=$(ping $SERVER_HOST -c 1 -s 16 | grep -oE '[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+' | head -1)
      python run_simulator.py -s $IP_SERVER --topology_path ibnetdiscover_director.txt
    parallel: false


  - name: run client tests
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: |
      service rsyslog restart
      sleep 30
      export SERVER_HOST=$SERVER_HOST
      cd plugins/UFM_NDT_Plugin/tests
      python3 ndt_plugin_test.py --host $SERVER_HOST
    parallel: false


  - name: get ndt logs
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: |
      mkdir $WORKSPACE/logs/
      plugins/UFM_NDT_Plugin/.ci/do_get_logs.sh
    archiveArtifacts: 'logs/ndt.log'
    parallel: false


  - name: remove plugin end
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: plugins/UFM_NDT_Plugin/.ci/do_remove_plugin.sh
    parallel: false

  - name: finish simulation
    agentSelector: "{nodeLabel: 'UFM-POC'}"
    run: | 
      plugins/UFM_NDT_Plugin/.ci/finish_simulation.sh
    parallel: false


pipeline_start:
  run: |
    mkdir -p /auto/UFM/tmp/${JOB_NAME}/${BUILD_ID}

pipeline_stop:
  run: |
    echo All done

# Fail job if one of the steps fails or continue
failFast: false
