# IP address or host name of UFM server to connect with. For example: (10.20.30.50 or r-ufm51.mtr.labs.mlnx)
ufm_server=
# Authentication method when connecting to the UFM server. can be one of (token_auth, basic_auth, kerberos_auth)
# If you select basic_auth, you need to set ufm_server_user and ufm_server_pass
# If you select token_auth, you need to set token_auth
# If you select kerberos_auth you need to set principal_name and principal_pass
auth_type=token_auth
# Username of UFM server used to connect to UFM, if you set auth_type=basic_auth
ufm_server_user=
# UFM server user password
ufm_server_pass=
# Generated token when you set auth_type to be token_auth.
token=
# principal name to be used in kerberos authentication when you set auth_type to be kerberos_auth.
principal_name=
# Controls whether UFMâ€“SLURM Integration allocates a PKEY for SLURM jobs.
# - false : No PKEY is allocated; the default management PKEY (0x7fff) is used.
# - true  : A PKEY is allocated based on the 'pkey_allocation_mode' parameter setting.
pkey_allocation=true
# PKEY allocation mode: one of {static, dynamic}.
# - static  : use a statically assigned PKEY when creating a new PKEY.
# - dynamic : use dynamic assignment when creating a new PKEY based on the slurm-job-id.
pkey_allocation_mode=static
# Applicable only when assigning a static PKEY for all SLURM jobs.
# If the pkey_allocation_mode is set to static, and the pkey is not set, the default management PKEY (0x7fff) will be used.
pkey=
# By setting sharp_allocation to True, UFM SLURM Integration will create new SHArP allocation with all SLURM job IDs allocated to hosts.
sharp_allocation=false
# By setting partially_alloc to false, UFM SHARP allocation API will fail the SHArP allocation request if at least one node does not exist in the fabric.
partially_alloc=true
# Name of UFM-SLURM integration logging file
log_file_name=/var/log/slurm/ufm_slurm.log
# by default, the value is set to 0, which means, allowing Slurm job to continue running even if the ufm-prolog.sh or ufm-epilog.sh exit with non-zero status.
fail_slurm_job_upon_failure=0
# Specifies the number of retry attempts to delete sharp reservation before giving up. 0 value means retry forever.
num_of_retries=5
# Represent the time interval (in seconds) between retry attempts.
retry_interval=2