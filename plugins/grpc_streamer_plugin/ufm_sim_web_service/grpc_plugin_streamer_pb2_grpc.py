# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import grpc_plugin_streamer_pb2 as grpc__plugin__streamer__pb2


class GeneralGRPCStreamerServiceStub(object):
    """API for communicate with the server, all the function the server most to support those function.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Help = channel.unary_unary(
                '/GeneralGRPCStreamerService/Help',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=grpc__plugin__streamer__pb2.SessionRespond.FromString,
                )
        self.Version = channel.unary_unary(
                '/GeneralGRPCStreamerService/Version',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=grpc__plugin__streamer__pb2.SessionRespond.FromString,
                )
        self.CreateSession = channel.unary_unary(
                '/GeneralGRPCStreamerService/CreateSession',
                request_serializer=grpc__plugin__streamer__pb2.SessionAuth.SerializeToString,
                response_deserializer=grpc__plugin__streamer__pb2.SessionRespond.FromString,
                )
        self.SubscribeToStream = channel.unary_stream(
                '/GeneralGRPCStreamerService/SubscribeToStream',
                request_serializer=grpc__plugin__streamer__pb2.gRPCStreamerID.SerializeToString,
                response_deserializer=grpc__plugin__streamer__pb2.gRPCStreamerParams.FromString,
                )
        self.GetJobParams = channel.unary_unary(
                '/GeneralGRPCStreamerService/GetJobParams',
                request_serializer=grpc__plugin__streamer__pb2.gRPCStreamerID.SerializeToString,
                response_deserializer=grpc__plugin__streamer__pb2.SubscriberParams.FromString,
                )
        self.RunStreamJob = channel.unary_stream(
                '/GeneralGRPCStreamerService/RunStreamJob',
                request_serializer=grpc__plugin__streamer__pb2.gRPCStreamerID.SerializeToString,
                response_deserializer=grpc__plugin__streamer__pb2.gRPCStreamerParams.FromString,
                )
        self.RunOnceJob = channel.unary_unary(
                '/GeneralGRPCStreamerService/RunOnceJob',
                request_serializer=grpc__plugin__streamer__pb2.gRPCStreamerID.SerializeToString,
                response_deserializer=grpc__plugin__streamer__pb2.runOnceRespond.FromString,
                )
        self.RunOnce = channel.unary_unary(
                '/GeneralGRPCStreamerService/RunOnce',
                request_serializer=grpc__plugin__streamer__pb2.SubscriberParams.SerializeToString,
                response_deserializer=grpc__plugin__streamer__pb2.runOnceRespond.FromString,
                )
        self.RunPeriodically = channel.unary_stream(
                '/GeneralGRPCStreamerService/RunPeriodically',
                request_serializer=grpc__plugin__streamer__pb2.SubscriberParams.SerializeToString,
                response_deserializer=grpc__plugin__streamer__pb2.gRPCStreamerParams.FromString,
                )
        self.StopStream = channel.unary_unary(
                '/GeneralGRPCStreamerService/StopStream',
                request_serializer=grpc__plugin__streamer__pb2.gRPCStreamerID.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Serialization = channel.unary_unary(
                '/GeneralGRPCStreamerService/Serialization',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListSubscribers = channel.unary_unary(
                '/GeneralGRPCStreamerService/ListSubscribers',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=grpc__plugin__streamer__pb2.ListSubscriberParams.FromString,
                )
        self.AddSubscriber = channel.unary_unary(
                '/GeneralGRPCStreamerService/AddSubscriber',
                request_serializer=grpc__plugin__streamer__pb2.SubscriberParams.SerializeToString,
                response_deserializer=grpc__plugin__streamer__pb2.SessionRespond.FromString,
                )
        self.EditSubscriber = channel.unary_unary(
                '/GeneralGRPCStreamerService/EditSubscriber',
                request_serializer=grpc__plugin__streamer__pb2.SubscriberParams.SerializeToString,
                response_deserializer=grpc__plugin__streamer__pb2.SessionRespond.FromString,
                )
        self.DeleteSubscriber = channel.unary_unary(
                '/GeneralGRPCStreamerService/DeleteSubscriber',
                request_serializer=grpc__plugin__streamer__pb2.gRPCStreamerID.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class GeneralGRPCStreamerServiceServicer(object):
    """API for communicate with the server, all the function the server most to support those function.
    """

    def Help(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Version(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateSession(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubscribeToStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobParams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunStreamJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunOnceJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunOnce(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunPeriodically(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopStream(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Serialization(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSubscribers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddSubscriber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditSubscriber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteSubscriber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GeneralGRPCStreamerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Help': grpc.unary_unary_rpc_method_handler(
                    servicer.Help,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=grpc__plugin__streamer__pb2.SessionRespond.SerializeToString,
            ),
            'Version': grpc.unary_unary_rpc_method_handler(
                    servicer.Version,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=grpc__plugin__streamer__pb2.SessionRespond.SerializeToString,
            ),
            'CreateSession': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateSession,
                    request_deserializer=grpc__plugin__streamer__pb2.SessionAuth.FromString,
                    response_serializer=grpc__plugin__streamer__pb2.SessionRespond.SerializeToString,
            ),
            'SubscribeToStream': grpc.unary_stream_rpc_method_handler(
                    servicer.SubscribeToStream,
                    request_deserializer=grpc__plugin__streamer__pb2.gRPCStreamerID.FromString,
                    response_serializer=grpc__plugin__streamer__pb2.gRPCStreamerParams.SerializeToString,
            ),
            'GetJobParams': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobParams,
                    request_deserializer=grpc__plugin__streamer__pb2.gRPCStreamerID.FromString,
                    response_serializer=grpc__plugin__streamer__pb2.SubscriberParams.SerializeToString,
            ),
            'RunStreamJob': grpc.unary_stream_rpc_method_handler(
                    servicer.RunStreamJob,
                    request_deserializer=grpc__plugin__streamer__pb2.gRPCStreamerID.FromString,
                    response_serializer=grpc__plugin__streamer__pb2.gRPCStreamerParams.SerializeToString,
            ),
            'RunOnceJob': grpc.unary_unary_rpc_method_handler(
                    servicer.RunOnceJob,
                    request_deserializer=grpc__plugin__streamer__pb2.gRPCStreamerID.FromString,
                    response_serializer=grpc__plugin__streamer__pb2.runOnceRespond.SerializeToString,
            ),
            'RunOnce': grpc.unary_unary_rpc_method_handler(
                    servicer.RunOnce,
                    request_deserializer=grpc__plugin__streamer__pb2.SubscriberParams.FromString,
                    response_serializer=grpc__plugin__streamer__pb2.runOnceRespond.SerializeToString,
            ),
            'RunPeriodically': grpc.unary_stream_rpc_method_handler(
                    servicer.RunPeriodically,
                    request_deserializer=grpc__plugin__streamer__pb2.SubscriberParams.FromString,
                    response_serializer=grpc__plugin__streamer__pb2.gRPCStreamerParams.SerializeToString,
            ),
            'StopStream': grpc.unary_unary_rpc_method_handler(
                    servicer.StopStream,
                    request_deserializer=grpc__plugin__streamer__pb2.gRPCStreamerID.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Serialization': grpc.unary_unary_rpc_method_handler(
                    servicer.Serialization,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListSubscribers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSubscribers,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=grpc__plugin__streamer__pb2.ListSubscriberParams.SerializeToString,
            ),
            'AddSubscriber': grpc.unary_unary_rpc_method_handler(
                    servicer.AddSubscriber,
                    request_deserializer=grpc__plugin__streamer__pb2.SubscriberParams.FromString,
                    response_serializer=grpc__plugin__streamer__pb2.SessionRespond.SerializeToString,
            ),
            'EditSubscriber': grpc.unary_unary_rpc_method_handler(
                    servicer.EditSubscriber,
                    request_deserializer=grpc__plugin__streamer__pb2.SubscriberParams.FromString,
                    response_serializer=grpc__plugin__streamer__pb2.SessionRespond.SerializeToString,
            ),
            'DeleteSubscriber': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteSubscriber,
                    request_deserializer=grpc__plugin__streamer__pb2.gRPCStreamerID.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'GeneralGRPCStreamerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GeneralGRPCStreamerService(object):
    """API for communicate with the server, all the function the server most to support those function.
    """

    @staticmethod
    def Help(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GeneralGRPCStreamerService/Help',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            grpc__plugin__streamer__pb2.SessionRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Version(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GeneralGRPCStreamerService/Version',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            grpc__plugin__streamer__pb2.SessionRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GeneralGRPCStreamerService/CreateSession',
            grpc__plugin__streamer__pb2.SessionAuth.SerializeToString,
            grpc__plugin__streamer__pb2.SessionRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubscribeToStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/GeneralGRPCStreamerService/SubscribeToStream',
            grpc__plugin__streamer__pb2.gRPCStreamerID.SerializeToString,
            grpc__plugin__streamer__pb2.gRPCStreamerParams.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJobParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GeneralGRPCStreamerService/GetJobParams',
            grpc__plugin__streamer__pb2.gRPCStreamerID.SerializeToString,
            grpc__plugin__streamer__pb2.SubscriberParams.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunStreamJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/GeneralGRPCStreamerService/RunStreamJob',
            grpc__plugin__streamer__pb2.gRPCStreamerID.SerializeToString,
            grpc__plugin__streamer__pb2.gRPCStreamerParams.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunOnceJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GeneralGRPCStreamerService/RunOnceJob',
            grpc__plugin__streamer__pb2.gRPCStreamerID.SerializeToString,
            grpc__plugin__streamer__pb2.runOnceRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunOnce(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GeneralGRPCStreamerService/RunOnce',
            grpc__plugin__streamer__pb2.SubscriberParams.SerializeToString,
            grpc__plugin__streamer__pb2.runOnceRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RunPeriodically(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/GeneralGRPCStreamerService/RunPeriodically',
            grpc__plugin__streamer__pb2.SubscriberParams.SerializeToString,
            grpc__plugin__streamer__pb2.gRPCStreamerParams.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GeneralGRPCStreamerService/StopStream',
            grpc__plugin__streamer__pb2.gRPCStreamerID.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Serialization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GeneralGRPCStreamerService/Serialization',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSubscribers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GeneralGRPCStreamerService/ListSubscribers',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            grpc__plugin__streamer__pb2.ListSubscriberParams.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddSubscriber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GeneralGRPCStreamerService/AddSubscriber',
            grpc__plugin__streamer__pb2.SubscriberParams.SerializeToString,
            grpc__plugin__streamer__pb2.SessionRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditSubscriber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GeneralGRPCStreamerService/EditSubscriber',
            grpc__plugin__streamer__pb2.SubscriberParams.SerializeToString,
            grpc__plugin__streamer__pb2.SessionRespond.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteSubscriber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GeneralGRPCStreamerService/DeleteSubscriber',
            grpc__plugin__streamer__pb2.gRPCStreamerID.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
